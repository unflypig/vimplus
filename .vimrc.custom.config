
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 用户自定义配置（该文件放一般性配置，可覆盖~/.vimrc里的配置，若要增加、卸载插件，请放入~/.vimrc.custom.plugins）
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 开启相对行号
" set relativenumber  

" 开启鼠标
" set mouse=a

" 设置光标所在列高亮
set cursorcolumn

" indentLine 开启代码对齐线
let g:indentLine_enabled = 1

" markdown
 let system = system('uname -s')
 if system == "Darwin\n"
     let g:mkdp_path_to_chrome = "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome"
 else
     let g:mkdp_path_to_chrome = '/usr/bin/google-chrome-stable %U'
 endif
 nmap <silent> <F7> <Plug>MarkdownPreview
 imap <silent> <F7> <Plug>MarkdownPreview
 nmap <silent> <F8> <Plug>StopMarkdownPreview
 imap <silent> <F8> <Plug>StopMarkdownPreview

" Doxygen
" let g:DoxygenToolkit_authorName="chxuan, 787280310@qq.com"
" let s:licenseTag = "Copyright(C)\<enter>"
" let s:licenseTag = s:licenseTag . "For free\<enter>"
" let s:licenseTag = s:licenseTag . "All right reserved\<enter>"
" let g:DoxygenToolkit_licenseTag = s:licenseTag
" let g:DoxygenToolkit_briefTag_funcName="yes"
" let g:doxygen_enhanced_color=1
" let g:DoxygenToolkit_commentType="Qt"
" 当新建 .h .c .hpp .cpp .mk .sh等文件时自动调用SetTitle 函数
autocmd BufNewFile *.[ch],*.hpp,*.cpp,Makefile,*.mk,*.sh exec ":call SetTitle()" 
" 加入注释 
func SetComment()
	call setline(1,"/*================================================================") 
	call append(line("."),   "*   Copyright (C) ".strftime("%Y")." Tykj Ltd. All rights reserved.")
	call append(line(".")+1, "*   ") 
	call append(line(".")+2, "*   文件名称：".expand("%:t")) 
	call append(line(".")+3, "*   创 建 者：zhangt")
	call append(line(".")+4, "*   创建日期：".strftime("%Y年%m月%d日")) 
	call append(line(".")+5, "*   描    述：") 
	call append(line(".")+6, "*")
	call append(line(".")+7, "================================================================*/") 
	call append(line(".")+8, "")
	call append(line(".")+9, "")
endfunc
" 加入shell,Makefile注释
func SetComment_sh()
	call setline(3, "#================================================================") 
	call setline(4, "#   Copyright (C) ".strftime("%Y")." TYKJ Ltd. All rights reserved.")
	call setline(5, "#   ") 
	call setline(6, "#   文件名称：".expand("%:t")) 
	call setline(7, "#   创 建 者：zhangt")
	call setline(8, "#   创建日期：".strftime("%Y年%m月%d日")) 
	call setline(9, "#   描    述：") 
	call setline(10, "#")
	call setline(11, "#================================================================")
	call setline(12, "")
	call setline(13, "")
endfunc 

func SetTitle()
	if &filetype == 'make' 
		call setline(1,"") 
		call setline(2,"")
		call SetComment_sh()
 
	elseif &filetype == 'sh' 
		call setline(1,"#!/system/bin/sh") 
		call setline(2,"")
		call SetComment_sh()
		
	else
	     call SetComment()
	     if expand("%:e") == 'hpp' 
		  call append(line(".")+10, "#ifndef _".toupper(expand("%:t:r"))."_H") 
		  call append(line(".")+11, "#define _".toupper(expand("%:t:r"))."_H") 
		  call append(line(".")+12, "#ifdef __cplusplus") 
		  call append(line(".")+13, "extern \"C\"") 
		  call append(line(".")+14, "{") 
		  call append(line(".")+15, "#endif") 
		  call append(line(".")+16, "") 
		  call append(line(".")+17, "#ifdef __cplusplus") 
		  call append(line(".")+18, "}") 
		  call append(line(".")+19, "#endif") 
		  call append(line(".")+20, "#endif //".toupper(expand("%:t:r"))."_H") 
 
	     elseif expand("%:e") == 'h' 
	  	call append(line(".")+10, "#pragma once") 
	     elseif &filetype == 'c' 
	  	call append(line(".")+10,"#include \"".expand("%:t:r").".h\"") 
	     elseif &filetype == 'cpp' 
	  	call append(line(".")+10, "#include \"".expand("%:t:r").".h\"") 
	     endif
	endif
endfunc

"配置常用函数的自动补全
inoremap #def #define <><ESC>i
inoremap #in #include <><ESC>i
inoremap np<Space> using namespace std;<CR>
inoremap nf<Space> #ifndef<CR>#define<CR><CR>#endif<ESC>3kea
inoremap if<Space> if()<CR>{<CR><CR>}//endif<ESC>02k2ei
inoremap ifelse if()<CR>{<CR><CR>} else<CR>{<CR><CR>}<ESC>02k2ei
inoremap while<Space> while()<CR>{<CR><CR>}//endwhile<ESC>2khi
inoremap do<Space> do<CR>{<CR><CR>}while();<ESC>0ki<Tab>
inoremap try<Space> try<CR>{<CR><CR>}catch(){<CR>}<ESC>2ki<Tab>
inoremap for<Space> for<CR>(int i = 0;i < len; ++i){<CR><CR>}//endfor<ESC>2k10lve
inoremap swit switch()<CR>{<CR>case:break;<CR>case:break;<CR>default:break;<CR>}//endswitch<ESC>4kehi
inoremap pri printf("");
inoremap main<Space> int main(int argc, char* argv[]){<CR><CR>return 0;<CR>}<ESC>2ki<Tab>
inoremap fn<Space> /*<CR><Tab>Describe:<CR><ESC>0i<Tab>Result:<CR><ESC>0i<Tab>Parameters: TypeName: Meaning<CR><Tab>arg:<CR><ESC>0i*/<ESC>4kEa
"inoremap cont<Space> /*操作:*/<CR>/*前提条件:*/<CR>/*后置条件:*/<ESC>4kEa
inoremap cont<Space> /*===============================================================<CR>@作者:zhangt<CR>@函数功能:<CR>@输入参数:<CR>@返回参数:<CR>@返回值:<CR>@其他:<CR>==============================================================*/<ESC>4kEa
""user design strat


